# .github/workflows/ci.yml

name: CI/CD Pipeline - Build, Test, and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # --- JOB 1: RUNS ON ALL PUSHES AND PRs ---
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pytest httpx

      - name: Run linter (Pylint)
        run: pylint main.py test_main.py --fail-under=5.0

      - name: Run tests (Pytest)
        run: pytest

      - name: Build Docker image (for test)
        run: docker build -t iris-api-ci:latest .

  # --- JOB 2: RUNS *ONLY* ON A PUSH TO 'main' ---
  push-to-registry:
    # This job must wait for 'build-and-test' to finish successfully
    needs: build-and-test

    # This 'if' condition is CRITICAL:
    # 1. 'github.event_name == 'push'': Only run for a push, not a PR.
    # 2. 'github.ref == 'refs/heads/main'': Only run when that push is to the 'main' branch.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # 1. Log in to the GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # 'github.actor' is your GitHub username
          # 'secrets.GITHUB_TOKEN' is an auto-generated token for this workflow
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 2. Set up Docker Buildx (needed for the push action)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. This one action BUILDS and PUSHES the image
      - name: Build and push to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .  # Use the Dockerfile from the root
          push: true  # This is the key! Tell it to push.
          
          # This creates a proper image tag.
          # e.g., ghcr.io/your-username/your-repo-name:latest
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest